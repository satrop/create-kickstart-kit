// ==========================================================================
// Mixins
// ==========================================================================

@use "sass:map";
@use "variables" as *;

// ==========================================================================
// Responsive Spacing Mixin
// ==========================================================================s
@mixin spacing($property, $spacing-map, $negative: false) {
  @if map.has-key($spacing-map, sm) {
    & {
      @if $negative {
        #{$property}: -1 * map.get($spacing-map, sm);
      } @else {
        #{$property}: map.get($spacing-map, sm);
      }
    }
  }

  @each $breakpoint, $min-width in $breakpoints {
    @if $breakpoint != sm and map.has-key($spacing-map, $breakpoint) {
      @media (min-width: $min-width) {
        @if $negative {
          #{$property}: -1 * map.get($spacing-map, $breakpoint);
        } @else {
          #{$property}: map.get($spacing-map, $breakpoint);
        }
      }
    }
  }
}

// ==========================================================================
// Usage Example - Keys are in the _variables.scss file
// ==========================================================================
// .element {
//   ! All other declarations MUST go before this include as part if
//   ! the new SASS behavior rules.
//   @include spacing(margin-top, $spacing-32);              // Positive margin
//   @include spacing(margin-top, $spacing-32, true);        // Negative margin
// }

// ==========================================================================
// Underline Mixin
// ==========================================================================
@mixin underline($color: null, $height: 2px, $bottom: 0px) {
  $final-color: if($color == null, currentColor, $color);

  text-decoration: none;
  position: relative;
  display: inline-block;

  &::after {
    content: "";
    position: absolute;
    bottom: $bottom;
    left: 50%;
    width: 0;
    height: $height;
    background-color: $final-color;
    transition: width var(--anim), left var(--anim);
  }

  &:hover::after {
    width: 100%;
    left: 0;
  }
}
