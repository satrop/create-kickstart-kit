@use "sass:map";
@use "./breakpoint.core" as *;
@use "../tokens/grid/grid-vars" as *;

@each $breakpoint, $value in $main-margins {
  @include break(#{$breakpoint}) {
    :root {
      --main-margins: #{$value};
    }
  }
}

@each $breakpoint, $value in $outer-margins {
  @include break(#{$breakpoint}) {
    :root {
      --outer-margins: #{$value};
    }
  }
}

:root {
  --container-main-width-total: calc(var(--container-main-width) + 2 * var(--main-margins));
  --container-wide-width-total: calc(var(--container-wide-width) + 2 * var(--outer-margins));
}

// 4, 8, 12 column grid system
.section-grid {
  display: grid;
  width: 100%;
  column-gap: map.get($grid-gaps, sm);
  grid-template-columns: repeat(#{map.get($grid-columns, sm)}, 1fr);

  @include break(md) {
    column-gap: map.get($grid-gaps, md);
    grid-template-columns: repeat(#{map.get($grid-columns, md)}, 1fr);
  }

  @include break(lg) {
    column-gap: map.get($grid-gaps, lg);
    grid-template-columns: repeat(#{map.get($grid-columns, lg)}, 1fr);
  }
}

// =============================================
// Base Site Grid Setup
// =============================================

.site-wrapper {
  display: grid;
  max-width: var(--site-max-width);
  margin-inline: auto;
  justify-content: center;

  grid-template-columns:
    [outer-start] minmax(0, var(--outer-margins)) [wide-start] minmax(0, var(--main-margins)) [main-start] minmax(0, var(--container-main-width)) [main-end] minmax(0, var(--main-margins)) [wide-end] minmax(0, var(--outer-margins)) [outer-end];
}

// =============================================
// Grid Column Utilities
// =============================================
.layout-wide {
  grid-column: outer-start / outer-end;

  @include break(md) {
    grid-column: wide-start / wide-end;
  }
}

.layout-full {
  grid-column: outer-start / outer-end;
}

.layout-main {
  grid-column: wide-start / wide-end;

  @include break(md) {
    grid-column: main-start / main-end;
  }
}

.layout-breakout-left {
  grid-column: outer-start / wide-end;

  @include break(md) {
    grid-column: outer-start / main-end;
  }
}

.layout-breakout-right {
  grid-column: wide-start / outer-end;

  @include break(md) {
    grid-column: main-start / outer-end;
  }
}