@use "sass:map";
@use "./section-grid" as sg;
@use "../abstracts/breakpoints" as bp;

// Generally you should not need to modify this file.

// =============================================
// Column Utilities
// =============================================

// Start + Span utils (e.g. .col-start-2, .md\:col-4)
@each $breakpoint, $columns in sg.$grid-columns {
  $is-sm: $breakpoint == sm;
  $prefix: if($is-sm, "", "#{$breakpoint}\\:");

  @for $i from 1 through $columns {
    .#{$prefix}col-start-#{$i} {
      @if $is-sm {
        grid-column-start: #{$i};
      } @else {
        @include bp.respond-to($breakpoint) {
          grid-column-start: #{$i};
        }
      }
    }

    .#{$prefix}col-#{$i} {
      @if $is-sm {
        grid-column: span #{$i} / span #{$i};
      } @else {
        @include bp.respond-to($breakpoint) {
          grid-column: span #{$i} / span #{$i};
        }
      }
    }
  }
}

// Full-width utility (e.g. .col-full)
.col-full {
  @each $bp, $cols in sg.$grid-columns {
    @if $bp == sm {
      grid-column: span #{$cols} / span #{$cols};
    } @else {
      @include bp.respond-to($bp) {
        grid-column: span #{$cols} / span #{$cols};
      }
    }
  }
}

// Combined start+span classes (e.g. .lg\:col-start-3-span-6)
@each $breakpoint, $columns in sg.$grid-columns {
  $is-sm: $breakpoint == sm;
  $prefix: if($is-sm, "", "#{$breakpoint}\\:");

  @for $start from 1 through $columns {
    @for $span from 1 through ($columns - $start + 1) {
      .#{$prefix}col-start-#{$start}-span-#{$span} {
        @if $is-sm {
          grid-column: #{$start} / span #{$span};
        } @else {
          @include bp.respond-to($breakpoint) {
            grid-column: #{$start} / span #{$span};
          }
        }
      }
    }
  }
}
