// Color tokens (soft pastels)
$demo-colors: (
  blue: #e3f2fd,
  // soft blue
  green: #e8f5e9,
  // soft green
  orange: #fff3e0,
  // soft orange
  pink: #fce4ec,
  // soft pink
  purple: #f3e5f5 // soft purple,,,,,,,,,,,,
);

section + section {
  margin-top: 2rem;
}

@each $name, $color in $demo-colors {
  .demo-#{$name} {
    background-color: $color;
    color: #333;
    border: 2px solid darken($color, 10%);
    border-radius: 4px;
    padding: 0.5rem;
  }
}

// Breakpoints
$breakpoints: (
  sm: 0,
  md: 768px,
  lg: 1200px,
);

// Columns per breakpoint
$grid-columns: (
  sm: 4,
  md: 8,
  lg: 12,
);

// Padding per breakpoint (inline)
$row-padding: (
  sm: 40px,
  md: 50px,
  lg: 144px,
);

// Gaps between columns
$grid-gaps: (
  sm: 20px,
  md: 25px,
  lg: 30px,
);

// Media mixin
@mixin respond-to($bp) {
  @if map-has-key($breakpoints, $bp) {
    @media (min-width: map-get($breakpoints, $bp)) {
      @content;
    }
  }
}

@each $breakpoint, $columns in $grid-columns {
  $is-sm: $breakpoint == sm;
  $prefix: if($is-sm, "", "#{$breakpoint}\\:");

  @for $i from 1 through $columns {
    // Column Start Utilities
    .#{$prefix}col-start-#{$i} {
      @if $is-sm {
        grid-column-start: #{$i};
      } @else {
        @include respond-to($breakpoint) {
          grid-column-start: #{$i};
        }
      }
    }

    // Column Span Utilities
    .#{$prefix}col-span-#{$i} {
      @if $is-sm {
        grid-column: span #{$i} / span #{$i};
      } @else {
        @include respond-to($breakpoint) {
          grid-column: span #{$i} / span #{$i};
        }
      }
    }
  }
}

.col-full {
  @each $bp, $cols in $grid-columns {
    @if $bp == sm {
      grid-column: span #{$cols} / span #{$cols};
    } @else {
      @include respond-to($bp) {
        grid-column: span #{$cols} / span #{$cols};
      }
    }
  }
}

.col-full {
  background-color: rgba(0, 0, 0, 0.1);
  padding: 0.5rem;
}

// THE ROW
.section-grid {
  display: grid;
  box-sizing: border-box;
  // Small
  padding-inline: 40px;
  gap: 20px;
  grid-template-columns: repeat(4, 1fr);

  @include respond-to(md) {
    padding-inline: 50px;
    gap: 25px;
    grid-template-columns: repeat(8, 1fr);
  }

  @include respond-to(lg) {
    padding-inline: 144px;
    gap: 30px;
    grid-template-columns: repeat(12, 1fr);
  }
}

.container {
  max-width: 1200px;
  margin-inline: auto;
}

.container-wide {
  max-width: 1400px;
  margin-inline: auto;
}

.container-breakout-left {
  max-width: 1700px;
  margin-right: auto;
}

.container-breakout-right {
  max-width: 1700px;
  margin-left: auto;
}

.container-breakout-both {
  max-width: 1700px;
  margin-inline: auto;
}
