---
import Layout from "@/layouts/Layout.astro";
import Card from "@/components/Card/Card.astro";
import {
  getColorEntries,
  getColorName,
  getBackgroundExamples,
  getTextExamples,
  getExampleColor,
  getCSSExampleColors,
} from "@/styles/core/colors-data.core";

const colorEntries = getColorEntries();
const backgroundExamples = getBackgroundExamples();
const textExamples = getTextExamples();
const exampleColor = getExampleColor();
const cssExamples = getCSSExampleColors();

import DemoNavigation from "../../components/DemoNavigation/DemoNavigation.astro";
import { getFormComponentNavigation } from "../../utils/demoNavigation";
import "@/styles/demo.scss";

// Get navigation items with current page marked as active
const navigationItems = getFormComponentNavigation("colors");
---

<Layout title="Color System - Astro Kickstart">
  <Fragment slot="main">
    <main id="main" class="layout-main owl-32" aria-label="Main content">
      <div class="section-grid owl-32">
        <DemoNavigation title="Form Components" items={navigationItems} />
        <div class="col-4 md:col-4 lg:col-9">
          <div class="colors-page">
            <section class="page-header">
              <div class="section-grid">
                <div class="col-full">
                  <div class="page-intro">
                    <h1>Color System</h1>
                    <p>
                      Explore the color palette and utility classes available in the Astro Kickstart theme. Each color
                      is available as CSS custom properties and utility classes for easy use throughout your project.
                    </p>
                  </div>
                </div>
              </div>
            </section>

            <section class="color-showcase">
              <div class="section-grid owl-32">
                <div class="col-full">
                  <h2 class="section-title">Color Palette</h2>
                  <p>
                    All colors are available as CSS custom properties (e.g., <code
                      >var(--{exampleColor.colorName}-{exampleColor.shade})</code
                    >) and utility classes (e.g., <code>.bg-{exampleColor.colorName}-{exampleColor.shade}</code>, <code
                      >.ast-text--{exampleColor.colorName}-{exampleColor.shade}</code
                    >).
                  </p>
                </div>

                {
                  colorEntries.map(([colorName, shades]) => {
                    return (
                      <div class="col-full">
                        <Card variant="bordered">
                          <Fragment slot="header">
                            <h3>{getColorName(colorName)}</h3>
                          </Fragment>
                          <div class="color-group">
                            <div class="color-swatches-row">
                              {Object.entries(shades)
                                .sort((a, b) => {
                                  // Sort shades from dark to light (higher numbers first)
                                  const numA = parseInt(a[0]);
                                  const numB = parseInt(b[0]);
                                  return isNaN(numA) || isNaN(numB) ? 0 : numB - numA;
                                })
                                .map(([shade, value]) => {
                                  return (
                                    <div class="color-swatch">
                                      <div
                                        class={`color-preview bg-${colorName}-${shade}`}
                                        style={`background-color: ${value}`}
                                      />
                                      <div class="color-info">
                                        <div class="color-name">{shade}</div>
                                        <div class="color-value">{value}</div>
                                      </div>
                                    </div>
                                  );
                                })}
                            </div>
                            <div class="color-usage">
                              <div class="usage-title">Usage:</div>
                              <div class="usage-examples">
                                <code>--{colorName}-[shade]</code>
                                <code>.bg-{colorName}-[shade]</code>
                                <code>.ast-text--{colorName}-[shade]</code>
                              </div>
                            </div>
                          </div>
                        </Card>
                      </div>
                    );
                  })
                }
              </div>
            </section>

            <section class="usage-examples">
              <div class="section-grid owl-32">
                <div class="col-full">
                  <h2 class="section-title">Usage Examples</h2>
                  <p>Here are some examples of how to use the color system in your components:</p>
                </div>

                <div class="col-full lg:col-6">
                  <Card variant="bordered">
                    <Fragment slot="header">
                      <h3>Background Colors</h3>
                    </Fragment>
                    <div class="usage-example">
                      {
                        backgroundExamples.map((example) => (
                          <div
                            class={`example-item ${example.className}`}
                            style={`background-color: ${example.value}; color: #333;`}>
                            <code>.{example.className}</code>
                          </div>
                        ))
                      }
                    </div>
                  </Card>
                </div>

                <div class="col-full lg:col-6">
                  <Card variant="bordered">
                    <Fragment slot="header">
                      <h3>Text Colors</h3>
                    </Fragment>
                    <div class="usage-example">
                      {
                        textExamples.map((example) => (
                          <div class={`example-item ${example.className}`} style={`color: ${example.value}`}>
                            <code>.{example.className}</code> - {example.displayName} text example
                          </div>
                        ))
                      }
                    </div>
                  </Card>
                </div>

                <div class="col-full">
                  <Card variant="bordered">
                    <Fragment slot="header">
                      <h3>CSS Custom Properties</h3>
                    </Fragment>
                    <div class="usage-example">
                      <p>You can also use CSS custom properties directly in your stylesheets:</p>
                      <div class="demo-code">
                        <pre><code>{`.my-component {
  background-color: var(--${cssExamples[0]?.colorName}-${cssExamples[0]?.shade});
  color: var(--${cssExamples[1]?.colorName}-${cssExamples[1]?.shade});
  border: 1px solid var(--${cssExamples[2]?.colorName}-${cssExamples[2]?.shade});
}`}</code></pre>
                      </div>
                    </div>
                  </Card>
                </div>
              </div>
            </section>
          </div>
        </div>
      </div>
    </main>
  </Fragment></Layout
>
