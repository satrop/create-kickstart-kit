---
export interface RadioOption {
  value: string;
  label: string;
  disabled?: boolean;
}

export interface Props {
  name: string;
  options: RadioOption[];
  value?: string; // Currently selected value
  required?: boolean;
  label: string;
  helpText?: string;
  error?: string;
  orientation?: "vertical" | "horizontal";
}

const { name, options, value, required = false, label, helpText, error, orientation = "vertical" } = Astro.props;

const fieldsetId = `radio-${name}`;
---

<fieldset class="radio-group">
  <legend class="radio-group__legend">
    {label}
    {required && <span class="radio-group__required">*</span>}
  </legend>

  <div class={`radio-group__options radio-group__options--${orientation}`}>
    {
      options.map((option) => {
        const id = `${fieldsetId}-${option.value}`;
        return (
          <div class="radio-field">
            <input
              type="radio"
              id={id}
              name={name}
              value={option.value}
              checked={value === option.value}
              disabled={option.disabled}
              required={required}
              class="radio-field__input"
              aria-describedby={helpText || error ? `${fieldsetId}-description` : undefined}
              aria-invalid={error ? "true" : "false"}
            />

            <label for={id} class="radio-field__label">
              <span class="radio-field__button" aria-hidden="true">
                <span class="radio-field__dot" />
              </span>
              <span class="radio-field__text">{option.label}</span>
            </label>
          </div>
        );
      })
    }
  </div>

  {
    helpText && (
      <div id={`${fieldsetId}-description`} class="radio-group__help">
        {helpText}
      </div>
    )
  }

  {
    error && (
      <div id={`${fieldsetId}-description`} class="radio-group__error" role="alert">
        {error}
      </div>
    )
  }
</fieldset>

<style>
  .radio-group {
    margin-bottom: 1rem;
    border: none;
    padding: 0;
  }

  .radio-group__legend {
    font-weight: 500;
    color: #333;
    margin-bottom: 0.75rem;
    padding: 0;
  }

  .radio-group__required {
    color: #dc3545;
    margin-left: 0.25rem;
  }

  .radio-group__options {
    display: flex;
    gap: 1rem;
  }

  .radio-group__options--vertical {
    flex-direction: column;
    gap: 0.75rem;
  }

  .radio-group__options--horizontal {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1.5rem;
  }

  .radio-field {
    position: relative;
  }

  .radio-field__input {
    position: absolute;
    opacity: 0;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }

  .radio-field__label {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    cursor: pointer;
    font-weight: 400;
    line-height: 1.5;
    color: #333;

    &:hover .radio-field__button {
      border-color: #007bff;
      background-color: #f8f9fa;
    }
  }

  .radio-field__button {
    flex-shrink: 0;
    width: 1.25rem;
    height: 1.25rem;
    border: 2px solid #ccc;
    border-radius: 50%;
    background-color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    margin-top: 0.125rem; /* Align with first line of text */
  }

  .radio-field__dot {
    width: 0.5rem;
    height: 0.5rem;
    background-color: white;
    border-radius: 50%;
    transform: scale(0);
    transition: all 0.2s ease;
  }

  .radio-field__text {
    flex: 1;
  }

  .radio-group__help {
    margin-top: 0.5rem;
    font-size: 0.875rem;
    color: #6c757d;
  }

  .radio-group__error {
    margin-top: 0.5rem;
    font-size: 0.875rem;
    color: #dc3545;
  }

  /* Checked state */
  .radio-field__input:checked + .radio-field__label .radio-field__button {
    background-color: #007bff;
    border-color: #007bff;
  }

  .radio-field__input:checked + .radio-field__label .radio-field__dot {
    transform: scale(1);
  }

  /* Focus state */
  .radio-field__input:focus + .radio-field__label .radio-field__button {
    outline: 2px solid #007bff;
    outline-offset: 2px;
  }

  /* Disabled state */
  .radio-field__input:disabled + .radio-field__label {
    opacity: 0.6;
    cursor: not-allowed;
  }

  .radio-field__input:disabled + .radio-field__label .radio-field__button {
    background-color: #f8f9fa;
    border-color: #e0e0e0;
  }

  /* Error state */
  .radio-field__input[aria-invalid="true"] + .radio-field__label .radio-field__button {
    border-color: #dc3545;
  }

  .radio-field__input[aria-invalid="true"]:focus + .radio-field__label .radio-field__button {
    outline-color: #dc3545;
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .radio-field__input:focus + .radio-field__label .radio-field__button {
      outline: 3px solid;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .radio-field__button,
    .radio-field__dot {
      transition: none;
    }
  }
</style>
