---
export interface SwiperSlide {
  id: string;
  content: string;
  image?: string;
  alt?: string;
  title?: string;
}

export interface SwiperBreakpoint {
  slidesPerView: number;
  spaceBetween?: number;
}

export interface SwiperAutoplay {
  delay: number;
  disableOnInteraction?: boolean;
  pauseOnMouseEnter?: boolean;
  reverseDirection?: boolean;
}

export interface Props {
  slides: SwiperSlide[];
  slidesPerView?: number;
  spaceBetween?: number;
  loop?: boolean;
  autoplay?: boolean | SwiperAutoplay;
  navigation?: boolean;
  pagination?: boolean;
  centeredSlides?: boolean;
  breakpoints?: Record<number, SwiperBreakpoint>;
  class?: string;
  id?: string;
  height?: string;
  speed?: number;
  effect?: "slide" | "fade" | "cube" | "coverflow" | "flip";
  direction?: "horizontal" | "vertical";
  grabCursor?: boolean;
  mousewheel?: boolean;
  keyboard?: boolean;
  lazy?: boolean;
  watchSlidesProgress?: boolean;
}

const {
  slides,
  slidesPerView = 1,
  spaceBetween = 20,
  loop = false,
  autoplay = false,
  navigation = true,
  pagination = true,
  centeredSlides = false,
  breakpoints,
  class: className = "",
  id = `swiper-${Math.random().toString(36).substr(2, 9)}`,
  height = "auto",
  speed = 300,
  effect = "slide",
  direction = "horizontal",
  grabCursor = true,
  mousewheel = false,
  keyboard = true,
  lazy = true,
  watchSlidesProgress = false,
} = Astro.props;

// Create config object to pass to JavaScript
const swiperConfig = {
  slidesPerView,
  spaceBetween,
  loop: false, // Force disable loop to prevent warnings
  autoplay,
  navigation,
  pagination,
  centeredSlides,
  breakpoints,
  speed,
  effect,
  direction,
  grabCursor,
  mousewheel,
  keyboard,
  lazy,
  watchSlidesProgress,
};
---

<div class={`swiper-container ${className}`} data-component="swiper" data-swiper-config={JSON.stringify(swiperConfig)}>
  <div class="swiper" id={id} style={`height: ${height}`}>
    <div class="swiper-wrapper">
      {
        slides.map((slide, index) => (
          <div class="swiper-slide" data-slide-id={slide.id}>
            {slide.image && (
              <div class="swiper-slide__image-wrapper">
                <img
                  src={slide.image}
                  alt={slide.alt || slide.title || `Slide ${index + 1}`}
                  loading={lazy ? "lazy" : "eager"}
                  class="swiper-slide__image"
                />
              </div>
            )}
            {(slide.content || slide.title) && (
              <div class="swiper-slide__content">
                {slide.title && <h3 class="swiper-slide__title">{slide.title}</h3>}
                {slide.content && <div class="swiper-slide__text" set:html={slide.content} />}
              </div>
            )}
          </div>
        ))
      }
    </div>

    {
      navigation && slides.length > 1 && (
        <>
          <div class={`swiper-button-next ${id}-next`} aria-label="Next slide" tabindex="0" role="button" />
          <div class={`swiper-button-prev ${id}-prev`} aria-label="Previous slide" tabindex="0" role="button" />
        </>
      )
    }

    {pagination && slides.length > 1 && <div class={`swiper-pagination ${id}-pagination`} />}
  </div>

  {
    slides.length === 0 && (
      <div class="swiper-empty" role="status" aria-label="No slides available">
        <p>No slides to display</p>
      </div>
    )
  }
</div>
