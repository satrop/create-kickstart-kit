---
export interface Props {
  variant?: "default" | "bordered" | "elevated";
  padding?: "none" | "small" | "medium" | "large";
  interactive?: boolean;
  href?: string;
  imageSrc?: string;
  imageAlt?: string;
  imagePosition?: "top" | "left" | "right";
}

const {
  variant = "default",
  padding = "medium",
  interactive = false,
  href,
  imageSrc,
  imageAlt = "",
  imagePosition = "top",
} = Astro.props;

const Tag = href ? "a" : "div";
const cardClasses = [
  "card",
  `card--${variant}`,
  `card--padding-${padding}`,
  interactive ? "card--interactive" : "",
  href ? "card--clickable" : "",
  imageSrc ? `card--with-image card--image-${imagePosition}` : "",
]
  .filter(Boolean)
  .join(" ");
---

<Tag class={cardClasses} href={href} {...Astro.props}>
  {
    imageSrc && (
      <div class="card__image">
        <img src={imageSrc} alt={imageAlt} class="card__image-element" />
      </div>
    )
  }

  <div class="card__body">
    {
      Astro.slots.has("header") && (
        <div class="card__header">
          <slot name="header" />
        </div>
      )
    }

    <div class="card__content">
      <slot />
    </div>

    {
      Astro.slots.has("footer") && (
        <div class="card__footer">
          <slot name="footer" />
        </div>
      )
    }
  </div>
</Tag>

<style lang="scss">
  @use "./Card.scss";
</style>

<script>
  import "./Card.js";
</script>
