---
import { asset } from "@/utils/assets";
import { Image } from "astro:assets";

export interface Props {
  imageSrc: string;
  imageAlt: string;
  contentLayout?: "50-50" | "70-30" | "center";
  hPosition?: "left" | "right" | "center";
  vPosition?: "top" | "center" | "bottom";
  maxHeight?: "tall" | "medium" | "short" | "screen";
  overlay?: "none" | "light" | "dark" | "gradient";
  textColor?: "light" | "dark" | "auto";
  textAlign?: "left" | "center" | "right";
  priority?: boolean;
  lazy?: boolean;
  title?: string;
  subtitle?: string;
  description?: string;
}

const {
  imageSrc,
  imageAlt,
  contentLayout = "center",
  hPosition = "center",
  vPosition = "center",
  maxHeight = "large",
  overlay = "dark",
  textColor = "auto",
  textAlign = "left",
  priority = true,
  lazy = false,
  title = "",
  subtitle = "",
  description = "",
} = Astro.props;

// Generate classes based on props
const heroClasses = [
  "ast-hero",
  `ast-hero__${contentLayout}`,
  `ast-hero--${maxHeight}`,
  `ast-hero__overlay--${overlay}`,
  `ast-hero__text--${textColor}`,
  `ast-hero__text-align--${textAlign}`,
].join(" ");

const contentClasses = ["ast-hero__content", `ast-hero--${contentLayout}`].join(" ");

// Define grid column spans based on layout
let contentColumns = "";
let vertPosition = "center";

if (contentLayout === "50-50") {
  if (hPosition === "center") {
    contentColumns = "col-4 md:col-start-2-span-4 lg:col-start-4-span-6";
  } else if (hPosition === "left") {
    contentColumns = "col-4 md:col-start-1-span-4 lg:col-start-2-span-5";
  } else if (hPosition === "right") {
    contentColumns = "col-4 md:col-start-5-span-4 lg:col-start-7-span-5";
  }
}

if (contentLayout === "70-30") {
  if (hPosition === "center") {
    contentColumns = "col-4 md:col-start-2-span-6 lg:col-start-3-span-8";
  } else if (hPosition === "left") {
    contentColumns = "col-4 md:col-start-1-span-6 lg:col-start-2-span-8";
  } else if (hPosition === "right") {
    contentColumns = "col-4 md:col-start-3-span-6 lg:col-start-4-span-8";
  }
}

if (vPosition === "center") {
  vertPosition = "ast-hero__content--center";
} else if (vPosition === "top") {
  vertPosition = "ast-hero__content--top";
} else if (vPosition === "bottom") {
  vertPosition = "ast-hero__content--bottom";
}

const finalContentClasses = `${contentClasses} ${contentColumns} ${vertPosition}`.trim();
---

<section class={heroClasses}>
  <div class="ast-hero__background layout-full">
    <Image
      src={asset(imageSrc)}
      alt={imageAlt}
      class="ast-hero__image"
      loading={priority ? "eager" : lazy ? "lazy" : "eager"}
      width={1920}
      height={1080}
      data-enhanced=""
    />
    {overlay !== "none" && <div class="ast-hero__overlay" />}
  </div>

  <div class="section-grid ast-hero__grid">
    <div class={finalContentClasses}>
      <div class="ast-hero__content-wrapper">
        <div class="ast-hero__content">
          <h1 class="ast-heading-1">{title}</h1>
          <h2 class="ast-heading-2">{subtitle}</h2>
          <p>{description}</p>
          <slot name="content" />
          <slot />
        </div>
        <div class="ast-hero__actions">
          {Astro.slots.actions ? <slot name="actions" /> : null}
        </div>
      </div>
    </div>
  </div>
</section>
