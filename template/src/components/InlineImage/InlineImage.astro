---
import { asset } from "../../utils/assets";

export interface Props {
  src: string;
  alt: string;
  align?: "left" | "right";
  size?: "small" | "medium" | "large" | "auto";
  caption?: string;
  lazy?: boolean;
  fallback?: string;
  placeholder?: boolean;
  priority?: boolean;
  width?: number;
  height?: number;
  class?: string;
}

const {
  src,
  alt,
  align = "left",
  size = "medium",
  caption,
  lazy = true,
  fallback,
  placeholder = true,
  priority = false,
  width,
  height,
  class: className = "",
} = Astro.props;

const alignClass = `inline-img--${align}`;
const sizeClass = `inline-img--${size}`;

// Handle asset optimization
const optimizedSrc = asset(src);
const fallbackSrc = fallback ? asset(fallback) : undefined;

const imgClasses = ["inline-img__image", className].filter(Boolean).join(" ");

const wrapperClasses = ["inline-img", alignClass, sizeClass, caption ? "inline-img--with-caption" : ""]
  .filter(Boolean)
  .join(" ");

const imgAttributes = {
  src: lazy && !priority ? undefined : optimizedSrc,
  alt,
  loading: (lazy && !priority ? "lazy" : "eager") as "lazy" | "eager",
  class: imgClasses,
  "data-enhanced": "",
  ...(lazy && !priority && { "data-lazy": "", "data-src": optimizedSrc }),
  ...(fallbackSrc && { "data-fallback": fallbackSrc }),
  ...(placeholder !== undefined && { "data-placeholder": placeholder.toString() }),
  ...(width && { width }),
  ...(height && { height }),
};
---

<div class={wrapperClasses}>
  <img {...imgAttributes} />
  {caption && <span class="inline-img__caption">{caption}</span>}
</div>

<style lang="scss">
  .inline-img {
    display: inline-block;
    margin: 0.5rem;
    vertical-align: top;

    // Base sizes
    &--small {
      max-width: 150px;
    }

    &--medium {
      max-width: 250px;
    }

    &--large {
      max-width: 400px;
    }

    &--auto {
      max-width: 100%;
    }

    // Alignment styles
    &--left {
      float: left;
      margin-right: 1rem;
      margin-left: 0;
    }

    &--right {
      float: right;
      margin-left: 1rem;
      margin-right: 0;
    }

    // Caption spacing
    &--with-caption {
      .inline-img__image {
        display: block;
        margin-bottom: 0.25rem;
      }
    }

    // Clear floats after images
    &::after {
      content: "";
      display: table;
      clear: both;
    }
  }

  .inline-img__image {
    width: 100%;
    height: auto;
    border-radius: 4px;
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;

    // Loading state
    &.img--loading {
      opacity: 0.6;
      background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
      background-size: 200% 100%;
      animation: loading-shimmer 1.5s infinite;
    }

    // Loaded state
    &.img--loaded {
      opacity: 1;
    }

    // Error state
    &.img--error {
      opacity: 0.5;
      filter: grayscale(100%);
    }

    // Hover effect
    &:hover {
      transform: scale(1.02);
    }
  }

  .inline-img__caption {
    display: block;
    font-size: 0.875rem;
    color: #666;
    font-style: italic;
    text-align: center;
    line-height: 1.4;
  }

  // Image placeholder styles
  :global(.img-placeholder) {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: #f5f5f5;
    border: 2px dashed #ccc;
    border-radius: 4px;
    padding: 1rem;
    min-height: 100px;
    color: #999;

    svg {
      width: 2rem;
      height: 2rem;
      margin-bottom: 0.5rem;
    }

    span {
      font-size: 0.875rem;
      text-align: center;
    }
  }

  // Loading animation
  @keyframes loading-shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }

  // Responsive adjustments
  @media (max-width: 768px) {
    .inline-img {
      &--left,
      &--right {
        float: none;
        display: block;
        margin: 1rem auto;
        max-width: 100%;
      }

      &--large {
        max-width: 100%;
      }

      &--medium {
        max-width: 80%;
      }
    }
  }

  // Print styles
  @media print {
    .inline-img {
      &--left,
      &--right {
        float: none;
        display: block;
        margin: 0.5rem 0;
      }
    }

    .inline-img__image {
      &:hover {
        transform: none;
      }
    }
  }
</style>
