---
export interface Props {
  id: string;
  title?: string;
  size?: "small" | "medium" | "large" | "fullscreen";
  variant?: "default" | "alert" | "confirmation";
  closeOnOutsideClick?: boolean;
  closeOnEscape?: boolean;
  showCloseButton?: boolean;
  class?: string;
}

const {
  id,
  title,
  size = "medium",
  variant = "default",
  closeOnOutsideClick = true,
  closeOnEscape = true,
  showCloseButton = true,
  class: className,
  ...rest
} = Astro.props;

const dialogClasses = ["dialog", `dialog--${size}`, `dialog--${variant}`, className].filter(Boolean).join(" ");
---

<!-- Dialog Backdrop -->
<div class="dialog-backdrop" id={`${id}-backdrop`} aria-hidden="true" data-dialog-backdrop={id}>
  <!-- Dialog Container -->
  <div
    class={dialogClasses}
    id={id}
    role="dialog"
    aria-modal="true"
    aria-labelledby={title ? `${id}-title` : undefined}
    aria-describedby={`${id}-content`}
    data-dialog={id}
    data-close-outside={closeOnOutsideClick}
    data-close-escape={closeOnEscape}
    tabindex="-1"
    {...rest}>
    <!-- Dialog Header -->
    {
      (title || showCloseButton) && (
        <header class="dialog__header">
          {title && (
            <h2 class="dialog__title" id={`${id}-title`}>
              {title}
            </h2>
          )}
          {showCloseButton && (
            <button class="dialog__close" type="button" aria-label="Close dialog" data-dialog-close={id}>
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                aria-hidden="true">
                <line x1="18" y1="6" x2="6" y2="18" />
                <line x1="6" y1="6" x2="18" y2="18" />
              </svg>
            </button>
          )}
        </header>
      )
    }

    <!-- Dialog Content -->
    <div class="dialog__content" id={`${id}-content`}>
      <slot />
    </div>

    <!-- Dialog Actions (if provided) -->
    {
      Astro.slots.has("actions") && (
        <footer class="dialog__actions">
          <slot name="actions" />
        </footer>
      )
    }
  </div>
</div>

<style lang="scss">
  @use "./Dialog.scss";
</style>

<script>
  import "./Dialog.js";
</script>
