---
import { Image } from "astro:assets";

export interface SwiperSlide {
  id: string;
  content: string;
  image?: string;
  alt?: string;
}

export interface Props {
  slides: SwiperSlide[];
  slidesPerView?: number;
  spaceBetween?: number;
  loop?: boolean;
  autoplay?: boolean | { delay: number };
  navigation?: boolean;
  pagination?: boolean;
  centeredSlides?: boolean;
  breakpoints?: Record<number, { slidesPerView: number; spaceBetween?: number }>;
  class?: string;
  id?: string;
}

const {
  slides,
  slidesPerView = 1,
  spaceBetween = 20,
  loop = false,
  autoplay = false,
  navigation = true,
  pagination = true,
  centeredSlides = false,
  breakpoints,
  class: className = "",
  id = `swiper-${Math.random().toString(36).substr(2, 9)}`,
} = Astro.props;
---

<div class={`swiper-container ${className}`}>
  <div class="swiper" id={id}>
    <div class="swiper-wrapper">
      {
        slides.map((slide) => (
          <div class="swiper-slide" data-slide-id={slide.id}>
            {slide.image && (
              <Image
                src={slide.image}
                alt={slide.alt || ""}
                loading="lazy"
                class="swiper-slide__image"
                width={800}
                height={450}
              />
            )}
            <div class="swiper-slide__content" set:html={slide.content} />
          </div>
        ))
      }
    </div>

    {
      navigation && (
        <>
          <div class={`swiper-button-next ${id}-next`} aria-label="Next slide" />
          <div class={`swiper-button-prev ${id}-prev`} aria-label="Previous slide" />
        </>
      )
    }

    {pagination && <div class={`swiper-pagination ${id}-pagination`} />}
  </div>
</div>

<script>
  import Swiper from "swiper";
  import { Navigation, Pagination, Autoplay } from "swiper/modules";
  // import "swiper/css";
  // import "swiper/css/navigation";
  // import "swiper/css/pagination";

  // Get all swiper containers
  const swiperContainers = document.querySelectorAll(".swiper");

  swiperContainers.forEach((container) => {
    const id = container.id;
    const slideElements = container.querySelectorAll(".swiper-slide");
    const hasNavigation = container.querySelector(".swiper-button-next");
    const hasPagination = container.querySelector(".swiper-pagination");

    const swiper = new Swiper(container as HTMLElement, {
      modules: [Navigation, Pagination, Autoplay],
      slidesPerView: 1,
      spaceBetween: 20,
      loop: slideElements.length > 1,
      autoplay: {
        delay: 3000,
        disableOnInteraction: false,
      },
      navigation: hasNavigation
        ? {
            nextEl: `.${id}-next`,
            prevEl: `.${id}-prev`,
          }
        : false,
      pagination: hasPagination
        ? {
            el: `.${id}-pagination`,
            clickable: true,
          }
        : false,
      breakpoints: {
        640: {
          slidesPerView: Math.min(2, slideElements.length),
          spaceBetween: 20,
        },
        768: {
          slidesPerView: Math.min(3, slideElements.length),
          spaceBetween: 30,
        },
        1024: {
          slidesPerView: Math.min(4, slideElements.length),
          spaceBetween: 30,
        },
      },
      // Accessibility
      a11y: {
        enabled: true,
        prevSlideMessage: "Previous slide",
        nextSlideMessage: "Next slide",
        firstSlideMessage: "This is the first slide",
        lastSlideMessage: "This is the last slide",
        paginationBulletMessage: "Go to slide {{index}}",
      },
      // Keyboard navigation
      keyboard: {
        enabled: true,
        onlyInViewport: true,
      },
    });
  });
</script>

<style>
  .swiper-container {
    position: relative;
    width: 100%;
    margin-bottom: 2rem;
  }

  .swiper {
    width: 100%;
    height: auto;
  }

  .swiper-slide {
    background: white;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .swiper-slide:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  .swiper-slide__image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    display: block;
  }

  .swiper-slide__content {
    padding: 1rem;
    color: #333;
  }

  .swiper-slide__content :global(h3) {
    margin: 0 0 0.5rem 0;
    font-size: 1.25rem;
    font-weight: 600;
    color: #222;
  }

  .swiper-slide__content :global(p) {
    margin: 0;
    font-size: 0.875rem;
    line-height: 1.5;
    color: #666;
  }

  /* Custom navigation buttons */
  .swiper-button-next,
  .swiper-button-prev {
    color: #007bff;
    background: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
  }

  .swiper-button-next:hover,
  .swiper-button-prev:hover {
    background: #007bff;
    color: white;
    transform: scale(1.1);
  }

  .swiper-button-next::after,
  .swiper-button-prev::after {
    font-size: 16px;
    font-weight: bold;
  }

  /* Custom pagination */
  .swiper-pagination {
    position: relative;
    margin-top: 1rem;
  }

  .swiper-pagination :global(.swiper-pagination-bullet) {
    background: #ccc;
    opacity: 1;
    transition: all 0.3s ease;
  }

  .swiper-pagination :global(.swiper-pagination-bullet-active) {
    background: #007bff;
    transform: scale(1.2);
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .swiper-button-next,
    .swiper-button-prev {
      width: 35px;
      height: 35px;
    }

    .swiper-button-next::after,
    .swiper-button-prev::after {
      font-size: 14px;
    }

    .swiper-slide__image {
      height: 150px;
    }

    .swiper-slide__content {
      padding: 0.75rem;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .swiper-slide {
      border-width: 2px;
      border-color: #000;
    }

    .swiper-button-next,
    .swiper-button-prev {
      border: 2px solid #000;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .swiper-slide,
    .swiper-button-next,
    .swiper-button-prev,
    .swiper-pagination :global(.swiper-pagination-bullet) {
      transition: none;
    }

    .swiper-slide:hover {
      transform: none;
    }
  }
</style>
